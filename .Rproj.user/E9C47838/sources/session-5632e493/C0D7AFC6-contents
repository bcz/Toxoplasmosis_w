## Toxoplasmosis data cleaning
## May 2025
## Beatriz Calvo


#### 1. Setup code ####

# rm(list = ls())

root.dir <- rprojroot::find_rstudio_root_file()
data.dir <- "C:/Users/bcalvo/OneDrive - Royal Veterinary College/Toxoplasmosis/Data"

# libraries
library(tidyverse)


#### 2. Data management ####
d <-   read.csv(paste0(data.dir, "/Four choice feline odour test v3.csv"))

## Rename variable
names(d) <- c("id", "sex", "line_combined", "n_boli", "distance_t", "velocity_t", "distance_cat", "time_cat", "freq_enter_cat", "latency_enter_cat", "velocity_cat", "velocity_noncat", "proportion_time_cat", "round", "corticosterone", "testosterone", "line")

## Remove rows and columns
d <- d[d$line!="Infection not sustained",]
var_to_go <- c("corticosterone", "testosterone")
d <- d[, !(names(d) %in% var_to_go)]

# Summaries
d %>% group_by(sex) %>% summarise(n=n())
d %>% group_by(sex, line_combined, line) %>% summarise(n=n())

# Sun 04/05/2025 15:44 email from Joanne
# Ah ok, yes I think that was right.  It was in fact a (fortuitous perhaps) error, that the second batch of wildtype Leeds gave us turned out not to be the same as the original wildtype strain, and that is why we could not simply pool the two (for power etc).  But the second supposed wildtype was a basal gm line of Pru, albeit not one with the TgTH overespressed, so gave us a very nice test of GM in general â€“ consistent why our OE lines were pretty useless compared to the wildtype, even with higher TgTH levels in the OE lines, suggesting that GM parasites in general are a bit rubbish and also helps explain why the others did not find any effects.  Sometimes lab errors do indeed work out for the better 

# 	WT, TgTH0, TgTH-MID and TgTH-HIGH


## Create factors
d$line_f <- factor(d$line, 
                   levels = c("Unexposed control", "Wildtype 1", "Wildtype 2", "TgTH overexpressor 1", "TgTH overexpressor 2"),
                   labels =c("Control", "WT", "TgTH0", "TgTH-MID", "TgTH-HIGH"))

d$round_f <- factor(d$round, 
                    levels = c("First experiment round", "Second experiment round", "Third experiment round" ), 
                    labels =c("Round_1", "Round_2", "Round_3"))

d$sex_f <- factor(d$sex, 
                  levels = c("Male", "Female"), 
                  labels = c(1,2) )


## Create new variables

d$distance_noncat_bc <- d$distance_t - d$distance_cat

d$time_noncat_bc <- d$distance_noncat_bc / d$velocity_noncat

d$entries_noncat_time_bc <- d$freq_enter_cat / d$time_noncat_bc *100

d$distance_diff_bc <- d$distance_cat - d$distance_noncat_bc

# ## Continuous variables: distance, time, velocity and proportion of time will be modelled as Normal/student t distributions and need to be centred
# 
# d$distance_t_c <- d$distance_t - mean(d$distance_t)
# d$distance_cat_c <- d$distance_cat - mean(d$distance_cat)
# 
# d$time_cat_c <- d$time_cat - mean(d$time_cat)
# d$latency_enter_cat <- d$latency_enter_cat - mean(d$latency_enter_cat)
# d$proportion_time_cat_c <- d$proportion_time_cat - mean(d$proportion_time_cat)
# 
# d$time_cat2 <- ceiling(d$time_cat)
d$time_t_bc <- ceiling(d$time_cat / d$proportion_time_cat)
# 
# d$velocity_t_c <- d$velocity_t - mean(d$velocity_t)
# d$velocity_cat_c <- d$velocity_cat - mean(d$velocity_cat)
# d$velocity_noncat_c <- d$velocity_noncat - mean(d$velocity_noncat)


# New continuous variable

d$velocity_diff <- d$velocity_cat - d$velocity_noncat
# d$velocity_diff_c <- d$velocity_diff - abs(mean(d$velocity_diff)) 

# Count variables n_boli and freq_enter_cat will be modelled as Poisson/Negative binomial distributions and do not need transformation


## Combined variable

d$line_sex <- factor(paste(d$line, d$sex, sep="_"))

## Make unique id variable
d$rat_id <- paste("rat", c(1:nrow(d)), sep="_")

## Select and order variables
d <- d %>% dplyr::select(id,
                         rat_id,
                         
                         round,
                         round_f,
                         
                         line,
                         line_f,
                         #line_combined,
                         
                         sex,
                         sex_f,
                         
                         line_sex,
                         
                         distance_t,
                         distance_cat,
                         distance_noncat_bc,
                         distance_diff_bc,
                         
                         velocity_t,
                         velocity_cat,
                         velocity_noncat,
                         velocity_diff,
                         
                         time_t_bc,
                         time_cat,
                         time_noncat_bc,
                         
                         proportion_time_cat,
                         
                         latency_enter_cat,
                         
                         freq_enter_cat,
                         entries_noncat_time_bc,
                         
                         n_boli
)

rm(var_to_go)

## Export file
#write.csv(d, file = paste0(data.dir, "/Clean/clean_data.csv"))
saveRDS(d, file = paste0(data.dir, "/Clean/clean_data.rds"))



# What lines were used in each round
rounds <- d %>% group_by(line_f, round_f) %>% summarise(n=n()) %>% dcast(line_f ~ round_f)
colnames(rounds) <- c("Line", "Round 1", "Round 2", "Round 3")
flextable(rounds)
# Only Control and W were used in different rounds
# save table
flextable(rounds) %>% save_as_docx( path = paste0(results.dir, "/Round/round.docx"))

rm(rounds)

# https://discourse.mc-stan.org/t/model-checking-comparison-using-loo-vs-loo-compare/33694/5